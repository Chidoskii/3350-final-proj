SET foreign_key_checks = 0; --turn off FK

DROP TABLE IF EXISTS User;
CREATE TABLE User(
    userID int NOT NULL AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    passwordd VARCHAR(255) NOT NULL,
    fname VARCHAR(255) DEFAULT NULL,
    lname VARCHAR(255) DEFAULT NULL,
    dob DATE DEFAULT NULL,
    adminn BOOLEAN DEFAULT 0,
    dname VARCHAR(255) DEFAULT NULL,
    avatar VARCHAR(255) DEFAULT NULL, 
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Primary Key(userID)
);

DROP TABLE IF EXISTS Followers;
CREATE TABLE Followers(
    u_ID INT NOT NULL,
    follower_ID INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (u_ID, follower_ID),
    FOREIGN KEY (u_ID) REFERENCES User(userID),
    FOREIGN KEY (follower_ID) REFERENCES User(userID)
);

DROP TABLE IF EXISTS Review;
CREATE TABLE Review (
    reviewID INT NOT NULL AUTO_INCREMENT,
    u_ID INT NOT NULL,
    mID INT NOT NULL,
    critique TEXT DEFAULT NULL,
    rating decimal DEFAULT NULL,
    NOD boolean DEFAULT 0,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (reviewID),
    FOREIGN KEY (u_ID) REFERENCES User(userID),
    FOREIGN KEY (mID) REFERENCES Movie(movie_ID)
);

DROP TABLE IF EXISTS Lists;
CREATE TABLE Lists (
    listID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    u_ID INT NOT NULL, 
    listName VARCHAR(255) NOT NULL,
    ltype VARCHAR(255) NOT NULL, 
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (u_ID) REFERENCES User(userID)
);

DROP TABLE IF EXISTS List_Items;
CREATE TABLE List_Items (
    l_ID INT NOT NULL,
    mID INT NOT NULL, 
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (l_ID, mID),
    FOREIGN KEY (l_ID) REFERENCES Lists(listID),
    FOREIGN KEY (mID) REFERENCES Movie(movie_ID)
);

DROP TABLE IF EXISTS Movie;
CREATE TABLE Movie (
    movie_ID INT PRIMARY KEY AUTO_INCREMENT,
    starID INT NOT NULL,
    costarID INT NOT NULL,
    title VARCHAR(255) DEFAULT NULL,
    genre VARCHAR(255) DEFAULT NULL,
    studio VARCHAR(255) DEFAULT NULL,
    releaseDate DATE DEFAULT NULL,
    rrank DECIMAL DEFAULT NULL,
    buffRating DECIMAL DEFAULT NULL,
    ovr DECIMAL DEFAULT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (starID) REFERENCES Actor(actorID),
    FOREIGN KEY (costarID) REFERENCES Actor(actorID)
);

DROP TABLE IF EXISTS Performers;
CREATE TABLE Performers (
    aID INT NOT NULL,
    mID INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (aID, mID),
    FOREIGN KEY (aID) REFERENCES Actor(actorID),
    FOREIGN KEY (mID) REFERENCES Movie(movie_ID)
);

DROP TABLE IF EXISTS Actor;
CREATE TABLE Actor (
    actorID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    fname VARCHAR(255) NOT NULL,
    lname VARCHAR(255) NOT NULL,
    dob DATE DEFAULT NULL,
    nationality VARCHAR(255) DEFAULT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

DROP TABLE IF EXISTS Director;
CREATE TABLE Director (
    mID INT NOT NULL,
    pID INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (mID, pID),
    FOREIGN KEY (mID) REFERENCES Movie(movie_ID),
    FOREIGN KEY (pID) REFERENCES Producer(prodID)
);

DROP TABLE IF EXISTS Producer;
CREATE TABLE Producer (
    prodID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    fname VARCHAR(255) NOT NULL,
    lname VARCHAR(255) NOT NULL,
    nationality VARCHAR(255) DEFAULT NULL,
    dob DATE DEFAULT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

SET foreign_key_checks = 1;
